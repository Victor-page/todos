{"version":3,"sources":["api/client.js","features/filters/filtersSlice.js","features/todos/times-solid.svg","features/todos/todosSlice.js","features/header/Header.js","features/filters/colors.js","features/todos/TodoListItem.js","features/todos/TodoList.js","features/footer/StatusFilter.js","features/footer/ColorFilters.js","features/footer/RemainingTodos.js","features/footer/Footer.js","App.js","store.js","api/server.js","index.js"],"names":["client","endpoint","a","body","customConfig","headers","config","method","JSON","stringify","window","fetch","response","json","data","ok","Error","statusText","Promise","reject","message","get","post","_path","StatusFilters","All","Active","Completed","initialState","status","colors","filtersSlice","createSlice","name","reducers","statusFilterChanged","state","payload","colorFilterChanged","reducer","color","changeType","includes","push","filter","existingColor","prepare","actions","todosAdapter","createEntityAdapter","getInitialState","todosSlice","todoToggled","todo","entities","completed","todoDeleted","removeOne","markAllCompleted","Object","values","forEach","clearAllCompleted","action","completedIds","map","id","removeMany","todoColorSelected","todoId","extraReducers","builder","addCase","fetchTodos","pending","fulfilled","setAll","saveNewTodo","addOne","createAsyncThunk","text","initialTodo","todos","getSelectors","selectTodos","selectAll","selectTodoById","selectById","selectFilteredTodos","createSelector","filters","showAllCompletions","length","completedStatus","statusMatches","colorMatches","selectFilteredTodoIds","filteredTodos","selectRemainingTodos","Header","useState","setText","setStatus","dispatch","useDispatch","handleEnterKeyDown","key","trimmedText","trim","saveNewTodoThunk","isLoading","placeholder","loader","className","autoFocus","type","value","onChange","target","onKeyDown","disabled","_extends","assign","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref","svgRef","title","props","createElement","focusable","role","viewBox","ref","fill","d","ForwardRef","forwardRef","availableColors","capitalize","s","toUpperCase","slice","TodoListItem","useSelector","colorOptions","c","checked","style","onClick","TodoList","todoIds","renderListItems","StatusFilter","renderFilters","ColorFilters","renderColors","backgroundColor","RemainingTodos","count","suffix","getFilters","Footer","todosRemaining","App","store","configureStore","todosReducer","filtersReducer","IdSerializer","RestSerializer","extend","serializeIds","rng","seedrandom","randomFromArray","array","min","max","Math","ceil","floor","todoTemplates","base","Server","routes","namespace","timing","resource","server","schema","req","normalizedRequestAttrs","create","models","Model","list","hasMany","factories","Factory","Number","template","replace","generateTodoText","serializers","serialize","object","request","numerifyId","seeds","createList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAGO,SAAeA,EAAtB,kC,4CAAO,WAAsBC,GAAtB,uCAAAC,EAAA,8FAA4D,GAA1BC,EAAlC,EAAkCA,KAASC,EAA3C,iBACCC,EAAU,CAAE,eAAgB,oBAE5BC,EAHD,yBAIHC,OAAQJ,EAAO,OAAS,OACrBC,GALA,IAMHC,QAAQ,2BACHA,GACAD,EAAaC,WAIhBF,IACFG,EAAOH,KAAOK,KAAKC,UAAUN,IAb1B,kBAkBoBO,OAAOC,MAAMV,EAAUK,GAlB3C,cAkBGM,EAlBH,iBAmBUA,EAASC,OAnBnB,WAmBHC,EAnBG,QAoBCF,EAASG,GApBV,0CAqBMD,GArBN,cAuBG,IAAIE,MAAMJ,EAASK,YAvBtB,2DAyBIC,QAAQC,OAAO,KAAIC,QAAU,KAAIA,QAAUN,IAzB/C,2D,sBA6BPd,EAAOqB,IAAM,SAACpB,GAAD,IAAWG,EAAX,uDAA0B,GAA1B,OACXJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BG,OAAQ,UAE9CP,EAAOsB,KAAO,SAACrB,EAAUE,GAAX,IAAiBC,EAAjB,uDAAgC,GAAhC,OACZJ,EAAOC,EAAD,YAAC,eAAeG,GAAhB,IAA8BD,WClC/B,ICFHoB,EDESC,EAAgB,CAC3BC,IAAK,MACLC,OAAQ,SACRC,UAAW,aAGPC,EAAe,CAAEC,OAAQL,EAAcC,IAAKK,OAAQ,IAEpDC,EAAeC,YAAY,CAC/BC,KAAM,UACNL,eACAM,SAAU,CACRC,oBADQ,SACYC,EADZ,GACiC,IAAZC,EAAW,EAAXA,QAC3BD,EAAMP,OAASQ,GAEjBC,mBAAoB,CAClBC,QADkB,SACVH,EADU,GACW,IAAZC,EAAW,EAAXA,QACPG,EAAsBH,EAAtBG,MAAOC,EAAeJ,EAAfI,WACPX,EAAWM,EAAXN,OACR,OAAQW,GACN,IAAK,SACFX,EAAOY,SAASF,IAAUV,EAAOa,KAAKH,GACvC,MAEF,IAAK,UACHJ,EAAMN,OAASA,EAAOc,QACpB,SAACC,GAAD,OAAmBA,IAAkBL,OAS7CM,QAAS,SAACN,EAAOC,GAAR,MAAwB,CAAEJ,QAAS,CAAEG,QAAOC,oBAKpD,EAAoDV,EAAagB,QAApCT,GAA7B,EAAQH,oBAAR,EAA6BG,oBAErBP,IAAf,QEpCQN,EAAmBD,EAAnBC,IAAKE,EAAcH,EAAdG,UAQPqB,EAAeC,cAEfrB,EAAeoB,EAAaE,gBAAgB,CAChDrB,OAAQ,SAGJsB,EAAanB,YAAY,CAC7BC,KAAM,QACNL,eACAM,SAAU,CACRkB,YADQ,cACwC,IACxCC,EADuC,EAAjCC,SAAiC,EAAnBjB,SAE1BgB,EAAKE,WAAaF,EAAKE,WAEzBC,YAAaR,EAAaS,UAC1BC,iBANQ,YAMwB,IAAbJ,EAAY,EAAZA,SACjBK,OAAOC,OAAON,GAAUO,SAAQ,SAACR,GAAD,OAAWA,EAAKE,WAAY,MAE9DO,kBATQ,SASU1B,EAAO2B,GACvB,IAAMC,EAAeL,OAAOC,OAAOxB,EAAMkB,UACtCV,QAAO,SAACS,GAAD,OAAUA,EAAKE,aACtBU,KAAI,SAACZ,GAAD,OAAUA,EAAKa,MAEtBlB,EAAamB,WAAW/B,EAAO4B,IAEjCI,kBAAmB,CACjB7B,QADiB,cACsC,IAA7Ce,EAA4C,EAA5CA,SAA4C,IAA9BjB,QAAWG,EAAmB,EAAnBA,MACjCc,EADoD,EAAZe,QACvB7B,MAAQA,GAE3BM,QAAS,SAACuB,EAAQ7B,GAAT,MAAoB,CAAEH,QAAS,CAAEgC,SAAQ7B,aAGtD8B,cAAe,SAACC,GAAD,OACbA,EACGC,QAAQC,EAAWC,SAAS,SAACtC,EAAO2B,GACnC3B,EAAMP,OAAS,aAEhB2C,QAAQC,EAAWE,WAAW,SAACvC,EAAO2B,GACrCf,EAAa4B,OAAOxC,EAAO2B,EAAO1B,SAElCD,EAAMP,OAAS,UAEhB2C,QAAQK,EAAYF,UAAW3B,EAAa8B,WAG5C,EAMH3B,EAAWJ,QAGF8B,GATN,EACLT,kBADK,EAELN,kBAFK,EAGLJ,iBAHK,EAILF,YAJK,EAKLJ,YAIyB2B,YACzB,mBADyC,uCAEzC,WAAOC,GAAP,iBAAA9E,EAAA,6DACQ+E,EAAc,CAAED,QADxB,SAEyBhF,EAAOsB,KAAK,iBAAkB,CAAE+B,KAAM4B,IAF/D,cAEQrE,EAFR,yBAISA,EAASyC,MAJlB,2CAFyC,wDAU9BoB,EAAaM,YAAiB,mBAAD,sBAAqB,4BAAA7E,EAAA,sEACtCF,EAAOqB,IAAI,kBAD2B,cACvDT,EADuD,yBAGtDA,EAASsE,OAH6C,4CAOxD,EACLlC,EAAamC,cAAa,SAAC/C,GAAD,OAAWA,EAAM8C,SADnBE,EAAnB,EAAQC,UAAoCC,EAA5C,EAAgCC,WAO1BC,GAJgBC,YAAeL,GAAa,SAACF,GAAD,OACvDA,EAAMjB,KAAI,SAACZ,GAAD,OAAUA,EAAKa,SAGQuB,YACjCL,GACA,SAAChD,GAAD,OAAWA,EAAMsD,WACjB,SAACR,EAAOQ,GACN,IAAQ7D,EAAmB6D,EAAnB7D,OAAQC,EAAW4D,EAAX5D,OACV6D,EAAqB9D,IAAWJ,EACtC,GAAIkE,GAAwC,IAAlB7D,EAAO8D,OAC/B,OAAOV,EAGT,IAAMW,EAAkBhE,IAAWF,EAEnC,OAAOuD,EAAMtC,QAAO,SAACS,GACnB,IAAMyC,EACJH,GAAsBtC,EAAKE,YAAcsC,EACrCE,EAAiC,IAAlBjE,EAAO8D,QAAgB9D,EAAOY,SAASW,EAAKb,OACjE,OAAOsD,GAAiBC,SAKjBC,EAAwBP,YACnCD,GACA,SAACS,GAAD,OAAmBA,EAAchC,KAAI,SAACZ,GAAD,OAAUA,EAAKa,SAGzCgC,EAAuBT,YAAeL,GAAa,SAACF,GAG/D,OAFyBA,EAAMtC,QAAO,SAACS,GAAD,OAAWA,EAAKE,aAE9BqC,UAGXzC,IAAf,QChFegD,EA1CA,WACb,MAAwBC,mBAAS,IAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA4BD,mBAAS,QAArC,mBAAOvE,EAAP,KAAeyE,EAAf,KACMC,EAAWC,cAIXC,EAAkB,uCAAG,iCAAAvG,EAAA,yDAASwG,EAAT,EAASA,IAC5BC,EAAc3B,EAAK4B,OACb,UAARF,GAAoBC,EAFC,wDAMzBL,EAAU,WACJO,EAAmBhC,EAAY8B,GAPZ,SAQnBJ,EAASM,GARU,OAUzBR,EAAQ,IACRC,EAAU,QAXe,4CAAH,sDAcpBQ,EAAuB,YAAXjF,EACZkF,EAAcD,EAAY,GAAK,yBAC/BE,EAASF,GAAa,yBAAKG,UAAU,WAEzC,OACE,4BAAQA,UAAU,UAChB,2BACEC,WAAW,EACXC,KAAK,OACLF,UAAU,WACVF,YAAaA,EACbK,MAAOpC,EACPqC,SA5Be,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OAAgBjB,EAAQiB,EAAOF,QA6B9CG,UAAWd,EACXe,SAAUV,IAEXE,IFvCH,EAAY,CAAC,SAAU,SAE3B,SAASS,IAA2Q,OAA9PA,EAAW9D,OAAO+D,QAAU,SAAUJ,GAAU,IAAK,IAAIK,EAAI,EAAGA,EAAIC,UAAUhC,OAAQ+B,IAAK,CAAE,IAAIE,EAASD,UAAUD,GAAI,IAAK,IAAIjB,KAAOmB,EAAclE,OAAOmE,UAAUC,eAAeC,KAAKH,EAAQnB,KAAQY,EAAOZ,GAAOmB,EAAOnB,IAAY,OAAOY,IAA2BW,MAAMC,KAAMN,WAEhT,SAASO,EAAyBN,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAAkEnB,EAAKiB,EAAnEL,EAEzF,SAAuCO,EAAQO,GAAY,GAAc,MAAVP,EAAgB,MAAO,GAAI,IAA2DnB,EAAKiB,EAA5DL,EAAS,GAAQe,EAAa1E,OAAO2E,KAAKT,GAAqB,IAAKF,EAAI,EAAGA,EAAIU,EAAWzC,OAAQ+B,IAAOjB,EAAM2B,EAAWV,GAAQS,EAASG,QAAQ7B,IAAQ,IAAaY,EAAOZ,GAAOmB,EAAOnB,IAAQ,OAAOY,EAFxMkB,CAA8BX,EAAQO,GAAuB,GAAIzE,OAAO8E,sBAAuB,CAAE,IAAIC,EAAmB/E,OAAO8E,sBAAsBZ,GAAS,IAAKF,EAAI,EAAGA,EAAIe,EAAiB9C,OAAQ+B,IAAOjB,EAAMgC,EAAiBf,GAAQS,EAASG,QAAQ7B,IAAQ,GAAkB/C,OAAOmE,UAAUa,qBAAqBX,KAAKH,EAAQnB,KAAgBY,EAAOZ,GAAOmB,EAAOnB,IAAU,OAAOY,EAMne,IAAI,EAAgB,SAAuBsB,GACzC,IAAIC,EAASD,EAAKC,OACdC,EAAQF,EAAKE,MACbC,EAAQZ,EAAyBS,EAAM,GAE3C,OAAoB,IAAMI,cAAc,MAAOvB,EAAS,CACtD,cAAe,OACfwB,UAAW,QACX,cAAe,MACf,YAAa,QACbhC,UAAW,kCACXiC,KAAM,MACNC,QAAS,cACTC,IAAKP,GACJE,GAAQD,EAAqB,IAAME,cAAc,QAAS,KAAMF,GAAS,KAAMvH,IAAUA,EAAqB,IAAMyH,cAAc,OAAQ,CAC3IK,KAAM,eACNC,EAAG,uaAIHC,EAA0B,IAAMC,YAAW,SAAUT,EAAOK,GAC9D,OAAoB,IAAMJ,cAAc,EAAevB,EAAS,CAC9DoB,OAAQO,GACPL,OGnCQU,GHqCE,IGrCgB,CAAC,QAAS,OAAQ,SAAU,SAAU,QAExDC,EAAa,SAACC,GAAD,OAAOA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,IC2D/CC,EAvDM,SAAC,GAAY,IAAV5F,EAAS,EAATA,GAChBb,EAAO0G,aAAY,SAAC3H,GAAD,OAAWkD,EAAelD,EAAO8B,MAClDc,EAA2B3B,EAA3B2B,KAAMzB,EAAqBF,EAArBE,UAAWf,EAAUa,EAAVb,MAEnB+D,EAAWC,cAcXwD,EAAeP,EAAgBxF,KAAI,SAACgG,GAAD,OACvC,4BAAQvD,IAAKuD,EAAG7C,MAAO6C,GACpBP,EAAWO,OAIhB,OACE,4BACE,yBAAKhD,UAAU,QACb,yBAAKA,UAAU,iBACb,2BACEA,UAAU,SACVE,KAAK,WACL+C,QAAS3G,EACT8D,SA1BqB,kBAC7Bd,EAAS,CAAEY,KAAM,oBAAqB9E,QAAS6B,OA2BzC,yBAAK+C,UAAU,aAAajC,IAE9B,yBAAKiC,UAAU,mBACb,4BACEA,UAAU,cACVG,MAAO5E,EACP2H,MAAO,CAAE3H,SACT6E,SAhCiB,SAAC,GAAD,IAAoB7E,EAApB,EAAG8E,OAAUF,MAAb,OACzBb,EAAS,CACPY,KAAM,0BACN9E,QAAS,CAAEG,QAAO6B,OAAQH,OA+BpB,4BAAQkD,MAAM,KACb4C,GAEH,4BAAQ/C,UAAU,UAAUmD,QA/Bf,kBACnB7D,EAAS,CAAEY,KAAM,oBAAqB9E,QAAS6B,MA+BvC,kBAAC,EAAD,WC1BGmG,EAnBE,WACf,IAAMC,EAAUP,YAAY/D,GAG5B,GAAsB,YAFA+D,aAAY,SAAC3H,GAAD,OAAWA,EAAM8C,MAAMrD,UAGvD,OACE,yBAAKoF,UAAU,aACb,yBAAKA,UAAU,YAKrB,IAAMsD,EAAkBD,EAAQrG,KAAI,SAACI,GAAD,OAClC,kBAAC,EAAD,CAAcqC,IAAKrC,EAAQH,GAAIG,OAGjC,OAAO,wBAAI4C,UAAU,aAAasD,ICErBC,EAvBM,SAAC,GAAiC,IAAxB3I,EAAuB,EAA9BuF,MAAeC,EAAe,EAAfA,SAC/BoD,EAAgB9G,OAAO2E,KAAK9G,GAAeyC,KAAI,SAACyC,GACpD,IAAMU,EAAQ5F,EAAckF,GAEtBO,EAAYG,IAAUvF,EAAS,WAAa,GAElD,OACE,wBAAI6E,IAAKU,GACP,4BAAQH,UAAWA,EAAWmD,QALd,kBAAM/C,EAASD,KAM5BV,OAMT,OACE,yBAAKO,UAAU,yBACb,gDACA,4BAAKwD,KCiBIC,EAnCM,SAAC,GAAiC,IAAxB5I,EAAuB,EAA9BsF,MAAeC,EAAe,EAAfA,SAC/BsD,EAAelB,EAAgBxF,KAAI,SAACzB,GACxC,IAAM0H,EAAUpI,EAAOY,SAASF,GAMhC,OACE,2BAAOkE,IAAKlE,GACV,2BACE2E,KAAK,WACLlF,KAAMO,EACN0H,QAASA,EACT7C,SAXe,WAEnBA,EAAS7E,EADU0H,EAAU,UAAY,YAYvC,0BACEjD,UAAU,cACVkD,MAAO,CACLS,gBAAiBpI,KAGpBkH,EAAWlH,OAKlB,OACE,yBAAKyE,UAAU,wBACb,+CACA,0BAAMA,UAAU,kBAAkB0D,KCpBzBE,EAXQ,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAmB,IAAVD,EAAc,GAAK,IAElC,OACE,yBAAK7D,UAAU,cACb,+CACA,gCAAS6D,GAFX,QAEgCC,EAFhC,UCEEC,GAAa,SAAC5I,GAAD,OAAWA,EAAMsD,SAqCrBuF,GAnCA,WACb,IAAM1E,EAAWC,cACX0E,EAAiBnB,YAAY7D,GAEnC,EAA2B6D,YAAYiB,IAA/BnJ,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAYhB,OACE,4BAAQmF,UAAU,UAChB,yBAAKA,UAAU,WACb,uCACA,4BAAQA,UAAU,SAASmD,QARR,kBAAM7D,EAAS,CAAEY,KAAM,6BAQ1C,sBAGA,4BAAQF,UAAU,SAASmD,QATV,kBAAM7D,EAAS,CAAEY,KAAM,8BASxC,oBAKF,kBAAC,EAAD,CAAgB2D,MAAOI,IACvB,kBAAC,EAAD,CAAc9D,MAAOvF,EAAQwF,SApBV,SAACxF,GAAD,OACrB0E,EAAS,CAAEY,KAAM,8BAA+B9E,QAASR,OAoBvD,kBAAC,EAAD,CAAcuF,MAAOtF,EAAQuF,SAxBX,SAAC7E,EAAOC,GAAR,OACpB8D,EAASjE,EAAmBE,EAAOC,SCKxB0I,OAjBf,WACE,OACE,yBAAKlE,UAAU,OACb,8BACE,6BAASA,UAAU,oBACjB,qCACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,GAAD,WCLGmE,GAJDC,YAAe,CAC3B9I,QAAS,CAAE2C,MAAOoG,EAAc5F,QAAS6F,K,qCCCrCC,GAAeC,KAAeC,OAAO,CACzCC,aAAc,WASZC,GAAMC,OAwBV,IAAMC,GAAkB,SAACC,GACvB,IAPoBC,EAAKC,EAQzB,OAAOF,GARaC,EAOO,EAPFC,EAOKF,EAAMnG,OAAS,EAN7CoG,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMR,MAASK,EAAMD,EAAM,IAAMA,KAQzCK,GAAgB,CACpB,CAAEC,KAAM,aAAc1I,OAAQ,CAAC,OAAQ,QAAS,SAAU,SAC1D,CAAE0I,KAAM,eAAgB1I,OAAQ,CAAC,QAAS,OAAQ,UAAW,QAC7D,CAAE0I,KAAM,cAAe1I,OAAQ,CAAC,YAAa,OAAQ,WAUvD,IAAI2I,KAAO,CACTC,OADS,WAEPtE,KAAKuE,UAAY,UACjBvE,KAAKwE,OAAS,IAEdxE,KAAKyE,SAAS,SACdzE,KAAKyE,SAAS,SAEd,IAAMC,EAAS1E,KAEfA,KAAK5G,KAAK,UAAU,SAAUuL,EAAQC,GACpC,IAAMhM,EAAOoH,KAAK6E,yBAElB,GAAkB,UAAdjM,EAAKkE,KACP,MAAM,IAAIhE,MAAM,4BAIlB,OADe4L,EAAOI,OAAO,OAAQlM,OAIzCmM,OAAQ,CACN5J,KAAM6J,KAAMxB,OAAO,IACnByB,KAAMD,KAAMxB,OAAO,CACjBxG,MAAOkI,kBAGXC,UAAW,CACThK,KAAMiK,KAAQ5B,OAAO,CACnBxH,GADmB,SAChByD,GACD,OAAO4F,OAAO5F,IAEhB3C,KAJmB,WAKjB,OAxCiB,WACvB,IAAMwI,EAAW1B,GAAgBO,IAC3BjF,EAAQ0E,GAAgB0B,EAAS5J,QAEvC,OADa4J,EAASlB,KAAKmB,QAAQ,SAAUrG,GAqChCsG,IAETnK,UAPmB,WAQjB,OAAO,GAETf,MAVmB,WAWjB,MAAO,OAIbmL,YAAa,CACXtK,KAAMmI,GAAaE,OAAO,CACxBkC,UADwB,SACdC,EAAQC,GAEhB,IAAMC,EAAa,SAAC1K,GAClBA,EAAKa,GAAKqJ,OAAOlK,EAAKa,KAEpBrD,EAAO2K,GAAa1D,UAAU8F,UAAU3F,MAAMC,KAAMN,WAQxD,OANI/G,EAAKwC,KACP0K,EAAWlN,EAAKwC,MACPxC,EAAKqE,OACdrE,EAAKqE,MAAMrB,QAAQkK,GAGdlN,KAGXsM,KAAM3B,IAERwC,MA/DS,SA+DHpB,GACJA,EAAOqB,WAAW,OAAQ,MC3G9B7C,GAAM7E,SAAS9B,KAEfyJ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUhD,MAAOA,IACf,kBAAC,GAAD,QAGJiD,SAASC,eAAe,U","file":"static/js/main.be3b1225.chunk.js","sourcesContent":["// A tiny wrapper around fetch(), borrowed from\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\n\nexport async function client(endpoint, { body, ...customConfig } = {}) {\n  const headers = { 'Content-Type': 'application/json' };\n\n  const config = {\n    method: body ? 'POST' : 'GET',\n    ...customConfig,\n    headers: {\n      ...headers,\n      ...customConfig.headers,\n    },\n  };\n\n  if (body) {\n    config.body = JSON.stringify(body);\n  }\n\n  let data;\n  try {\n    const response = await window.fetch(endpoint, config);\n    data = await response.json();\n    if (response.ok) {\n      return data;\n    }\n    throw new Error(response.statusText);\n  } catch (err) {\n    return Promise.reject(err.message ? err.message : data);\n  }\n}\n\nclient.get = (endpoint, customConfig = {}) =>\n  client(endpoint, { ...customConfig, method: 'GET' });\n\nclient.post = (endpoint, body, customConfig = {}) =>\n  client(endpoint, { ...customConfig, body });\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const StatusFilters = {\r\n  All: 'all',\r\n  Active: 'active',\r\n  Completed: 'completed',\r\n};\r\n\r\nconst initialState = { status: StatusFilters.All, colors: [] };\r\n\r\nconst filtersSlice = createSlice({\r\n  name: 'filters',\r\n  initialState,\r\n  reducers: {\r\n    statusFilterChanged(state, { payload }) {\r\n      state.status = payload;\r\n    },\r\n    colorFilterChanged: {\r\n      reducer(state, { payload }) {\r\n        const { color, changeType } = payload;\r\n        const { colors } = state;\r\n        switch (changeType) {\r\n          case 'added': {\r\n            !colors.includes(color) && colors.push(color);\r\n            break;\r\n          }\r\n          case 'removed': {\r\n            state.colors = colors.filter(\r\n              (existingColor) => existingColor !== color\r\n            );\r\n            break;\r\n          }\r\n\r\n          default:\r\n            break;\r\n        }\r\n      },\r\n      prepare: (color, changeType) => ({ payload: { color, changeType } }),\r\n    },\r\n  },\r\n});\r\n\r\nexport const { statusFilterChanged, colorFilterChanged } = filtersSlice.actions;\r\n\r\nexport default filtersSlice.reducer;\r\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgTimesSolid = function SvgTimesSolid(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    focusable: \"false\",\n    \"data-prefix\": \"fas\",\n    \"data-icon\": \"times\",\n    className: \"svg-inline--fa fa-times fa-w-11\",\n    role: \"img\",\n    viewBox: \"0 0 352 512\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTimesSolid, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/times-solid.62038fcb.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  createSelector,\r\n  createSlice,\r\n  createAsyncThunk,\r\n  createEntityAdapter,\r\n} from '@reduxjs/toolkit';\r\nimport { client } from '../../api/client';\r\nimport { StatusFilters } from '../filters/filtersSlice';\r\nconst { All, Completed } = StatusFilters;\r\n\r\n// const nextTodoId = (todos) => {\r\n//   const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\r\n\r\n//   return maxId + 1;\r\n// };\r\n\r\nconst todosAdapter = createEntityAdapter();\r\n\r\nconst initialState = todosAdapter.getInitialState({\r\n  status: 'idle',\r\n});\r\n\r\nconst todosSlice = createSlice({\r\n  name: 'todos',\r\n  initialState,\r\n  reducers: {\r\n    todoToggled({ entities }, { payload: todoId }) {\r\n      const todo = entities[todoId];\r\n      todo.completed = !todo.completed;\r\n    },\r\n    todoDeleted: todosAdapter.removeOne,\r\n    markAllCompleted({ entities }) {\r\n      Object.values(entities).forEach((todo) => (todo.completed = true));\r\n    },\r\n    clearAllCompleted(state, action) {\r\n      const completedIds = Object.values(state.entities)\r\n        .filter((todo) => todo.completed)\r\n        .map((todo) => todo.id);\r\n\r\n      todosAdapter.removeMany(state, completedIds);\r\n    },\r\n    todoColorSelected: {\r\n      reducer({ entities }, { payload: { color, todoId } }) {\r\n        entities[todoId].color = color;\r\n      },\r\n      prepare: (todoId, color) => ({ payload: { todoId, color } }),\r\n    },\r\n  },\r\n  extraReducers: (builder) =>\r\n    builder\r\n      .addCase(fetchTodos.pending, (state, action) => {\r\n        state.status = 'loading';\r\n      })\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        todosAdapter.setAll(state, action.payload);\r\n\r\n        state.status = 'idle';\r\n      })\r\n      .addCase(saveNewTodo.fulfilled, todosAdapter.addOne),\r\n});\r\n\r\nexport const {\r\n  todoColorSelected,\r\n  clearAllCompleted,\r\n  markAllCompleted,\r\n  todoDeleted,\r\n  todoToggled,\r\n} = todosSlice.actions;\r\n\r\n// Thunk functions start\r\nexport const saveNewTodo = createAsyncThunk(\r\n  'todo/saveNewTodo',\r\n  async (text) => {\r\n    const initialTodo = { text };\r\n    const response = await client.post('/fakeApi/todos', { todo: initialTodo });\r\n\r\n    return response.todo;\r\n  }\r\n);\r\n\r\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\r\n  const response = await client.get('/fakeApi/todos');\r\n\r\n  return response.todos;\r\n});\r\n// Thunk functions end\r\n\r\nexport const { selectAll: selectTodos, selectById: selectTodoById } =\r\n  todosAdapter.getSelectors((state) => state.todos);\r\n\r\nexport const selectTodoIds = createSelector(selectTodos, (todos) =>\r\n  todos.map((todo) => todo.id)\r\n);\r\n\r\nexport const selectFilteredTodos = createSelector(\r\n  selectTodos,\r\n  (state) => state.filters,\r\n  (todos, filters) => {\r\n    const { status, colors } = filters;\r\n    const showAllCompletions = status === All;\r\n    if (showAllCompletions && colors.length === 0) {\r\n      return todos;\r\n    }\r\n\r\n    const completedStatus = status === Completed;\r\n\r\n    return todos.filter((todo) => {\r\n      const statusMatches =\r\n        showAllCompletions || todo.completed === completedStatus;\r\n      const colorMatches = colors.length === 0 || colors.includes(todo.color);\r\n      return statusMatches && colorMatches;\r\n    });\r\n  }\r\n);\r\n\r\nexport const selectFilteredTodoIds = createSelector(\r\n  selectFilteredTodos,\r\n  (filteredTodos) => filteredTodos.map((todo) => todo.id)\r\n);\r\n\r\nexport const selectRemainingTodos = createSelector(selectTodos, (todos) => {\r\n  const uncompletedTodos = todos.filter((todo) => !todo.completed);\r\n\r\n  return uncompletedTodos.length;\r\n});\r\n\r\nexport default todosSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveNewTodo } from '../todos/todosSlice';\r\n\r\nconst Header = () => {\r\n  const [text, setText] = useState('');\r\n  const [status, setStatus] = useState('idle');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target }) => setText(target.value);\r\n\r\n  const handleEnterKeyDown = async ({ key }) => {\r\n    const trimmedText = text.trim();\r\n    if (key !== 'Enter' || !trimmedText) {\r\n      return;\r\n    }\r\n\r\n    setStatus('loading');\r\n    const saveNewTodoThunk = saveNewTodo(trimmedText);\r\n    await dispatch(saveNewTodoThunk);\r\n\r\n    setText('');\r\n    setStatus('idle');\r\n  };\r\n\r\n  let isLoading = status === 'loading';\r\n  let placeholder = isLoading ? '' : 'What needs to be done?';\r\n  let loader = isLoading && <div className=\"loader\" />;\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <input\r\n        autoFocus={true}\r\n        type=\"text\"\r\n        className=\"new-todo\"\r\n        placeholder={placeholder}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onKeyDown={handleEnterKeyDown}\r\n        disabled={isLoading}\r\n      />\r\n      {loader}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const availableColors = ['green', 'blue', 'orange', 'purple', 'red'];\r\n\r\nexport const capitalize = (s) => s[0].toUpperCase() + s.slice(1);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ReactComponent as TimesSolid } from './times-solid.svg';\r\nimport { availableColors, capitalize } from '../filters/colors';\r\nimport { selectTodoById } from '../todos/todosSlice.js';\r\n\r\nconst TodoListItem = ({ id }) => {\r\n  const todo = useSelector((state) => selectTodoById(state, id));\r\n  const { text, completed, color } = todo;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleCompletedChanged = () =>\r\n    dispatch({ type: 'todos/todoToggled', payload: id });\r\n\r\n  const handleColorChanged = ({ target: { value: color } }) =>\r\n    dispatch({\r\n      type: 'todos/todoColorSelected',\r\n      payload: { color, todoId: id },\r\n    });\r\n\r\n  const handleDelete = () =>\r\n    dispatch({ type: 'todos/todoDeleted', payload: id });\r\n\r\n  const colorOptions = availableColors.map((c) => (\r\n    <option key={c} value={c}>\r\n      {capitalize(c)}\r\n    </option>\r\n  ));\r\n\r\n  return (\r\n    <li>\r\n      <div className=\"view\">\r\n        <div className=\"segment label\">\r\n          <input\r\n            className=\"toggle\"\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={handleCompletedChanged}\r\n          />\r\n          <div className=\"todo-text\">{text}</div>\r\n        </div>\r\n        <div className=\"segment buttons\">\r\n          <select\r\n            className=\"colorPicker\"\r\n            value={color}\r\n            style={{ color }}\r\n            onChange={handleColorChanged}\r\n          >\r\n            <option value=\"\"></option>\r\n            {colorOptions}\r\n          </select>\r\n          <button className=\"destroy\" onClick={handleDelete}>\r\n            <TimesSolid />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\nimport {\r\n  useSelector,\r\n  //  shallowEqual\r\n} from 'react-redux';\r\nimport TodoListItem from './TodoListItem';\r\nimport { selectFilteredTodoIds } from './todosSlice';\r\n\r\nconst TodoList = () => {\r\n  const todoIds = useSelector(selectFilteredTodoIds);\r\n  const loadingStatus = useSelector((state) => state.todos.status);\r\n\r\n  if (loadingStatus === 'loading') {\r\n    return (\r\n      <div className=\"todo-list\">\r\n        <div className=\"loader\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const renderListItems = todoIds.map((todoId) => (\r\n    <TodoListItem key={todoId} id={todoId} />\r\n  ));\r\n\r\n  return <ul className=\"todo-list\">{renderListItems}</ul>;\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport { StatusFilters } from '../filters/filtersSlice';\r\n\r\nconst StatusFilter = ({ value: status, onChange }) => {\r\n  const renderFilters = Object.keys(StatusFilters).map((key) => {\r\n    const value = StatusFilters[key];\r\n    const handleClick = () => onChange(value);\r\n    const className = value === status ? 'selected' : '';\r\n\r\n    return (\r\n      <li key={value}>\r\n        <button className={className} onClick={handleClick}>\r\n          {key}\r\n        </button>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"filters statusFilters\">\r\n      <h5>Filter by Status</h5>\r\n      <ul>{renderFilters}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatusFilter;\r\n","import React from 'react';\r\nimport { availableColors, capitalize } from '../filters/colors';\r\n\r\nconst ColorFilters = ({ value: colors, onChange }) => {\r\n  const renderColors = availableColors.map((color) => {\r\n    const checked = colors.includes(color);\r\n    const handleChange = () => {\r\n      const changeType = checked ? 'removed' : 'added';\r\n      onChange(color, changeType);\r\n    };\r\n\r\n    return (\r\n      <label key={color}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name={color}\r\n          checked={checked}\r\n          onChange={handleChange}\r\n        />\r\n        <span\r\n          className=\"color-block\"\r\n          style={{\r\n            backgroundColor: color,\r\n          }}\r\n        ></span>\r\n        {capitalize(color)}\r\n      </label>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"filters colorFilters\">\r\n      <h5>Filter by Color</h5>\r\n      <form className=\"colorSelection\">{renderColors}</form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorFilters;\r\n","import React from 'react';\r\n\r\nconst RemainingTodos = ({ count }) => {\r\n  const suffix = count === 1 ? '' : 's';\r\n\r\n  return (\r\n    <div className=\"todo-count\">\r\n      <h5>Remaining Todos</h5>\r\n      <strong>{count}</strong> item{suffix} left\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RemainingTodos;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport StatusFilter from './StatusFilter';\r\nimport ColorFilters from './ColorFilters';\r\nimport RemainingTodos from './RemainingTodos';\r\nimport { colorFilterChanged } from '../filters/filtersSlice';\r\nimport { selectRemainingTodos } from '../todos/todosSlice';\r\n\r\nconst getFilters = (state) => state.filters;\r\n\r\nconst Footer = () => {\r\n  const dispatch = useDispatch();\r\n  const todosRemaining = useSelector(selectRemainingTodos);\r\n\r\n  const { status, colors } = useSelector(getFilters);\r\n\r\n  const onColorChange = (color, changeType) =>\r\n    dispatch(colorFilterChanged(color, changeType));\r\n\r\n  const onStatusChange = (status) =>\r\n    dispatch({ type: 'filters/statusFilterChanged', payload: status });\r\n\r\n  const markAllCompleted = () => dispatch({ type: 'todos/markAllCompleted' });\r\n\r\n  const clearCompleted = () => dispatch({ type: 'todos/clearAllCompleted' });\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"actions\">\r\n        <h5>Actions</h5>\r\n        <button className=\"button\" onClick={markAllCompleted}>\r\n          Mark All Completed\r\n        </button>\r\n        <button className=\"button\" onClick={clearCompleted}>\r\n          Clear Completed\r\n        </button>\r\n      </div>\r\n\r\n      <RemainingTodos count={todosRemaining} />\r\n      <StatusFilter value={status} onChange={onStatusChange} />\r\n      <ColorFilters value={colors} onChange={onColorChange} />\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from './features/header/Header';\nimport TodoList from './features/todos/TodoList';\nimport Footer from './features/footer/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        <section className=\"medium-container\">\n          <h2>Todos</h2>\n          <div className=\"todoapp\">\n            <Header />\n            <TodoList />\n            <Footer />\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport todosReducer from './features/todos/todosSlice';\r\nimport filtersReducer from './features/filters/filtersSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: { todos: todosReducer, filters: filtersReducer },\r\n});\r\n\r\nexport default store;\r\n","/* eslint-disable no-unused-vars */\n\nimport { Server, Model, Factory, hasMany, RestSerializer } from 'miragejs';\n\nimport faker from 'faker';\nimport seedrandom from 'seedrandom';\n\nconst IdSerializer = RestSerializer.extend({\n  serializeIds: 'always',\n});\n\n// Set up a seeded random number generator, so that we get\n// a consistent set of users / entries each time the page loads.\n// This can be reset by deleting this localStorage value,\n// or turned off by setting `useSeededRNG` to false.\nlet useSeededRNG = false;\n\nlet rng = seedrandom();\n\nif (useSeededRNG) {\n  let randomSeedString = localStorage.getItem('randomTimestampSeed');\n  let seedDate;\n\n  if (randomSeedString) {\n    seedDate = new Date(randomSeedString);\n  } else {\n    seedDate = new Date();\n    randomSeedString = seedDate.toISOString();\n    localStorage.setItem('randomTimestampSeed', randomSeedString);\n  }\n\n  rng = seedrandom(randomSeedString);\n  faker.seed(seedDate.getTime());\n}\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(rng() * (max - min + 1)) + min;\n}\n\nconst randomFromArray = (array) => {\n  const index = getRandomInt(0, array.length - 1);\n  return array[index];\n};\n\nconst todoTemplates = [\n  { base: 'Buy $THING', values: ['milk', 'bread', 'cheese', 'toys'] },\n  { base: 'Clean $THING', values: ['house', 'yard', 'bedroom', 'car'] },\n  { base: 'Read $THING', values: ['newspaper', 'book', 'email'] },\n];\n\nconst generateTodoText = () => {\n  const template = randomFromArray(todoTemplates);\n  const value = randomFromArray(template.values);\n  const text = template.base.replace('$THING', value);\n  return text;\n};\n\nnew Server({\n  routes() {\n    this.namespace = 'fakeApi';\n    this.timing = 2000;\n\n    this.resource('todos');\n    this.resource('lists');\n\n    const server = this;\n\n    this.post('/todos', function (schema, req) {\n      const data = this.normalizedRequestAttrs();\n\n      if (data.text === 'error') {\n        throw new Error('Could not save the todo!');\n      }\n\n      const result = server.create('todo', data);\n      return result;\n    });\n  },\n  models: {\n    todo: Model.extend({}),\n    list: Model.extend({\n      todos: hasMany(),\n    }),\n  },\n  factories: {\n    todo: Factory.extend({\n      id(i) {\n        return Number(i);\n      },\n      text() {\n        return generateTodoText();\n      },\n      completed() {\n        return false;\n      },\n      color() {\n        return '';\n      },\n    }),\n  },\n  serializers: {\n    todo: IdSerializer.extend({\n      serialize(object, request) {\n        // HACK Mirage keeps wanting to store integer IDs as strings. Always convert them to numbers for now.\n        const numerifyId = (todo) => {\n          todo.id = Number(todo.id);\n        };\n        let json = IdSerializer.prototype.serialize.apply(this, arguments);\n\n        if (json.todo) {\n          numerifyId(json.todo);\n        } else if (json.todos) {\n          json.todos.forEach(numerifyId);\n        }\n\n        return json;\n      },\n    }),\n    list: IdSerializer,\n  },\n  seeds(server) {\n    server.createList('todo', 5);\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport './api/server';\nimport { Provider } from 'react-redux';\n\n// console.log('Initial state: ', store.getState());\n\n// store.subscribe(() => console.log('State after dispatch: ', store.getState()));\n\n// store.dispatch({ type: 'todos/todoAdded', payload: 'Learn about actions' });\n// store.dispatch({ type: 'todos/todoAdded', payload: 'Learn about reducers' });\n\nimport { fetchTodos } from './features/todos/todosSlice';\nstore.dispatch(fetchTodos());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}